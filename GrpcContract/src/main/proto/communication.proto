syntax = "proto3";
package pt.tecnico.moms.grpc;

// Camera <-> Central System

message Footage {
    bytes picture = 1;
    Timestamp time = 2;
}

message FootageAck {

}

message Timestamp {
    int32 year = 1;
    int32 month = 2;
    int32 day = 3;
    int32 hour = 4;
    int32 minutes = 5;
    int32 seconds = 6;
}

service CameraToCentralSystemService {
    rpc send_footage(Footage) returns (FootageAck);
}

// Smartphone App <-> Central System

message ItemId {
    string id = 1;
}

message Point {
    int32 x = 1;
    int32 y = 2;
}

message VideoFootage {
    repeated Footage pictures = 1; //Same as Java List<Footage>
    repeated BoundingBox itemBoundingBoxes = 2;
}

message BoundingBox {
    Point high = 1; //For the bounding box's point with the highest coordinates
    Point low = 2; //For the bounding box's point with the lowest coordinates
}

message ItemInformation {
    ItemId itemId = 1;
    bool tracked = 2;
    bool locked = 3;
}

message SearchParameters {
    string itemName = 1;
}

message SearchResponse {
    repeated ItemInformation searchResults = 1; //Same as Java List<ItemInformatio>
}

message PhotoResponse {
    enum ResponseStatus {
        OK = 0;
        NO_ITEM_FOUND = 1;
        MULTIPLE_ITEMS_FOUND = 2;
        ITEM_ALREADY_EXISTS = 3;
    }

    ItemId newItemId = 1;
    ResponseStatus status = 2;
}

message Ack {}

message StatusRequest {}

message ItemIdList {
    repeated ItemId items = 1;
}

message StatusResponse {
    enum Status {
        OK = 0;
        LOCKED_ITEMS_MOVED = 1;
        CAMERA_TURNED_OFF = 2;
    }

    oneof StatusInformation {
        Ack ok = 1;
        ItemIdList movedLockedItems = 2; //proto doesn't let me put "repeat" here, so a new message was created
        string offCameraInfo = 3;
    }

    Status status = 10;
}

service SmartphoneAppToCentralSystemService {
    /* Called when the user has an item selected on the "find" menu and presses "locate".
        Returns video footage of the last seen location of the item (last 5 seconds), as well
        as the corresponding item's bounding box.
     */
    rpc locateItem(ItemId) returns (VideoFootage);

    /* Called when the user takes a photograph of an item that he wants to track.
        Returns a response saying if everything's OK or NO_ITEM_FOUND no item was identified in the picture or MULTIPLE_ITEMS_FOUND
       if multiple items were found in the picture or ITEM_ALREADY_EXISTS if the identified item already exists in the system
       (independently if it's currently being tracked or not)
        If everything's OK, then a new ID is created for the identified item and gets returned.
     */
    rpc photoTaken(Footage) returns (PhotoResponse);

    /* Called when the user clicks "confirm insertion and track" after taking a photograph of a
        previously un-existent item.
        Returns an Ack.
     */
    rpc confirmItemInsertion(ItemId) returns (Ack);

    /* Called when the user clicks "search" after having typed at least 1 letter in the
        "search item" text box, or if the user just opened the Search view.
        Returns a list containing all tracked items whose names start with the given letters.
        If there are no letters, then return all tracked items (this happens when the user first opens the Search view,
        so he may see all items before searching for specific ones).
     */
    rpc searchItem(SearchParameters) returns (SearchResponse);

    /* Called when the user clicks "track" while having an item selected that's untracked, or
        when
        Returns an Ack.
     */
    rpc trackItem(ItemId) returns (Ack);

    /* Called when the user clicks "untrack" while having an item selected that's tracked.
        Returns an Ack.
     */
    rpc untrackItem(ItemId) returns (Ack);

    /* Called when the user clicks "lock" while having an item selected that's unlocked.
        Returns an Ack.
     */
    rpc lockItem(ItemId) returns (Ack);

    /* Called when the user clicks "unlock" while having an item selected that's locked.
        Returns an Ack.
     */
    rpc unlockItem(ItemId) returns (Ack);

    /* Called when the user clicks "remove" while having an item selected.
        Returns an Ack.
     */
    rpc removeItem(ItemId) returns (Ack);

    /* Called every so often by the SmartPhone App to request the Central System's status.
        Returns Status 'OK' if everything's fine, or
        returns 'LOCKED_ITEMS_MOVED' if at least 1 locked item was detected moving and a list containing the moved item IDs, or
        returns 'CAMERA_TURNED_OFF' if a camera turned off (briefly or permanently) and a string containing a message saying what happened.
     */
    rpc statusRequest(StatusRequest) returns (StatusResponse);
}